name: Package and Deploy

on:
  pull_request:
  release:
    types: [created, edited, published]
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}

jobs:
  source:
    name: Build Source distribution
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - run: pipx run build --sdist
    - run: pipx run twine check dist/*
    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/*.tar.gz

  cibuildwheel:
    name: Build ${{ matrix.python.tag }} ${{ matrix.variant.platform }} wheel on ${{ matrix.variant.os }}
    runs-on: ${{ matrix.variant.os }}
    strategy:
      fail-fast: false
      matrix:
        variant:
          - {os: ubuntu-20.04, platform: 'manylinux'}
          - {os: ubuntu-20.04, platform: 'musllinux'}
          - {os: macos-11, platform: 'macosx'}
        python:
          - {version: '3.6', tag: 'cp36'}
          - {version: '3.7', tag: 'cp37'}
          - {version: '3.8', tag: 'cp38'}
          - {version: '3.9', tag: 'cp39'}
          - {version: '3.10', tag: 'cp310'}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: pypa/cibuildwheel@v2.11.4
      env:
        CIBW_BUILD: ${{ matrix.python.tag }}-${{ matrix.variant.platform }}*
        MACOSX_DEPLOYMENT_TARGET: "10.15"

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - uses: actions/upload-artifact@v3
      with:
        name: "${{ matrix.python.tag }}-${{ matrix.variant.platform }}"
        path: wheelhouse/*.whl

  buildwheel:
    runs-on: ${{ matrix.variant.os }}
    strategy:
      fail-fast: false
      matrix:
        variant:
          - {os: windows-2019, name: "windows", config: "gha-test-windows"}
        python-version: [ '3.6', '3.7', '3.8', '3.9', '3.10' ]
    steps:
      - uses: brille/python-hdf5-buildwheel-action@v2.2
        with:
          os: ${{ matrix.variant.os }}
          python-version: ${{ matrix.python-version }}
          arch: auto64
          environment-file: .github/config/${{ matrix.variant.config }}.yml
          environment-name: ${{ matrix.variant.name }}

  draft:
    name: Deploy packages
    needs: [source, cibuildwheel, buildwheel]
    runs-on: ubuntu-20.04
    if: github.event_name == 'release'

    steps:
    - uses: actions/download-artifacts@v2
      id: download
      with:
        path: artifacts
    - name: Move artifacts into a single folder
      run: |
        mkdir dist
        find ${{ steps.download.outputs.download-path }} -type f -regex ".*\.\(tar\.gz\|whl\)" -exec mv {} dist/. \;
    - name: Attach artifacts to GitHub tagged draft release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        draft: ${{ github.event.action != 'published' }}
        prerelease: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "dist/*.whl,dist/*.tar.gz"
    - name: Publish artifacts to PyPI
      if: ${{ github.event.action == 'published' }}
      uses: pypa/gh-action-pypi-publish@release/v1.5.0
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
